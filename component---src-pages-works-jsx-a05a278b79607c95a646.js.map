{"version":3,"sources":["webpack:///./src/components/WorkList.jsx","webpack:///./src/pages/works.jsx","webpack:///./src/components/WorkItem.jsx"],"names":["WorkList","state","category","render","items","this","props","categories","reduce","acc","item","tags","forEach","tag","all","featured","hidden","categoryLinks","Object","keys","c","i","push","key","className","onClick","setState","prevState","filter","includes","map","WorkItem","title","slug","fields","image","images","React","Component","pageQuery","location","data","allWorksJson","edges","node","Layout","width","url","to","style","backgroundImage"],"mappings":"2MAsFeA,E,YA/Eb,aAAe,IAAD,SACZ,sBACKC,MAAQ,CACXC,SAAU,YAHA,E,oCAOdC,OAAA,WAAU,IAAD,OACDC,EAAUC,KAAKC,MAAfF,MAGEF,EAAaG,KAAKJ,MAAlBC,SACFK,EAAaH,EAAMI,QACvB,SAACC,EAAKC,GAIJ,OAHAA,EAAKC,KAAKC,SAAQ,SAACC,GACjBJ,EAAII,IAAO,KAENJ,IAET,CAAEK,KAAK,EAAMC,UAAU,WAElBR,EAAWS,OAGlB,IAAMC,EAAgB,GAkCtB,OAjCAC,OAAOC,KAAKZ,GAAYK,SAAQ,SAACQ,EAAGC,GAC9BA,EAAI,GACNJ,EAAcK,KAAK,MAEjBF,IAAMlB,EACRe,EAAcK,KACZ,0BAAMC,IAAKH,EAAGI,UAAU,qBACrBJ,IAILH,EAAcK,KACZ,0BACEC,IAAKH,EACLI,UAAU,WACVC,QAAS,WACP,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BzB,SAAUkB,QAIbA,OAQThB,GADAA,EAAQA,EAAMwB,QAAO,SAAClB,GAAD,OAAWA,EAAKC,KAAKkB,SAAS,cACrCD,QAAO,SAAClB,GAAD,MACN,QAAbR,GAA4BQ,EAAKC,KAAKkB,SAAS3B,MAI/C,6BACE,uBAAGsB,UAAU,aACX,2CACCP,GAEH,yBAAKO,UAAU,SACZpB,EAAM0B,KAAI,SAACpB,GAAD,OACT,kBAACqB,EAAA,EAAD,CACER,IAAKb,EAAKsB,MACVA,MAAOtB,EAAKsB,MACZC,KAAMvB,EAAKwB,OAAOD,KAClBE,MAAOzB,EAAK0B,OAAO,W,GAvEVC,IAAMC,WCWhBC,GAZE,sBAAyB,IAAtBC,EAAqB,EAArBA,SACVpC,EAD+B,EAAXqC,KACPC,aAAaC,MAAMb,KAAI,qBAAGc,QAE7C,OACE,kBAACC,EAAA,EAAD,CAAQL,SAAUA,EAAUM,MAAO,KACjC,oCACA,yDACA,kBAAC,EAAD,CAAU1C,MAAOA,MAKD,e,kCCjBtB,qCAKe,oBAFM2C,EAEHf,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAME,EAAhB,EAAgBA,MAAhB,OACb,kBAAC,IAAD,CAAMX,UAAU,OAAOwB,GAAIf,GACzB,yBAAKT,UAAU,cACb,yBACEA,UAAU,QACVyB,MAAO,CAAEC,gBAAgB,QAPZH,EAOgCZ,GAPvBY,EAAIlB,SAAS,QAAUkB,EAAvB,cAA2CA,GAOzC,SAG5B,6BAAMf","file":"component---src-pages-works-jsx-a05a278b79607c95a646.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React from \"react\";\nimport WorkItem from \"./WorkItem\";\n\nclass WorkList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: \"featured\",\n    };\n  }\n\n  render() {\n    let { items } = this.props;\n\n    // build categories\n    const { category } = this.state;\n    const categories = items.reduce(\n      (acc, item) => {\n        item.tags.forEach((tag) => {\n          acc[tag] = true;\n        });\n        return acc;\n      },\n      { all: true, featured: true }\n    );\n    delete categories.hidden;\n\n    // build category links\n    const categoryLinks = [];\n    Object.keys(categories).forEach((c, i) => {\n      if (i > 0) {\n        categoryLinks.push(\", \");\n      }\n      if (c === category) {\n        categoryLinks.push(\n          <span key={c} className=\"category selected\">\n            {c}\n          </span>\n        );\n      } else {\n        categoryLinks.push(\n          <span\n            key={c}\n            className=\"category\"\n            onClick={() => {\n              this.setState((prevState) => ({\n                category: c,\n              }));\n            }}\n          >\n            {c}\n          </span>\n        );\n      }\n    });\n\n    // filter items\n    items = items.filter((item) => !item.tags.includes(\"hidden\"));\n    items = items.filter((item) =>\n      category === \"all\" ? true : item.tags.includes(category)\n    );\n\n    return (\n      <div>\n        <p className=\"work-list\">\n          <b>Categories: </b>\n          {categoryLinks}\n        </p>\n        <div className=\"works\">\n          {items.map((item) => (\n            <WorkItem\n              key={item.title}\n              title={item.title}\n              slug={item.fields.slug}\n              image={item.images[0]}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkList;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport WorkList from \"../components/WorkList\";\n\nexport default ({ location, data }) => {\n  const items = data.allWorksJson.edges.map(({ node }) => node);\n\n  return (\n    <Layout location={location} width={900}>\n      <h1>Work</h1>\n      <h2>what I&apos;ve been working on</h2>\n      <WorkList items={items} />\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query WorkQuery {\n    allWorksJson(sort: { fields: date, order: DESC }) {\n      edges {\n        node {\n          title\n          tags\n          images\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst getImageUrl = (url) => (url.includes(\"http\") ? url : `/portfolio/${url}`);\n\nexport default ({ title, slug, image }) => (\n  <Link className=\"item\" to={slug}>\n    <div className=\"image-wrap\">\n      <div\n        className=\"image\"\n        style={{ backgroundImage: `url(${getImageUrl(image)})` }}\n      />\n    </div>\n    <div>{title}</div>\n  </Link>\n);\n"],"sourceRoot":""}